{"version":3,"sources":["Project.tsx","Projects.tsx","Home.tsx","Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Project","name","website","images","technologies","description","useState","currentIndex","setCurrentIndex","hover","setHover","imgRef","useRef","width","current","offsetWidth","useEffect","timeout","setTimeout","length","clearTimeout","className","href","target","rel","onMouseEnter","onMouseLeave","map","image","ref","style","transform","src","alt","onClick","mod","t","n","m","projects","Projects","p","Home","Navbar","to","activeClassName","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.47b0447d.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  website: string;\r\n  images: string[];\r\n  technologies: string[];\r\n  description: string;\r\n}\r\n\r\nconst Project: React.FC<Props> = ({ name, website, images, technologies, description }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [hover, setHover] = useState(false);\r\n  const imgRef = useRef<null | HTMLImageElement>(null);\r\n  const width = imgRef?.current?.offsetWidth;\r\n\r\n  useEffect(() => {\r\n    let timeout = setTimeout(() => {\r\n      setCurrentIndex((currentIndex + 1) % images.length);\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [currentIndex, images.length]);\r\n\r\n  return (\r\n    <div className=\"text-center border rounded bg-white\">\r\n      <div className=\"border-b\">\r\n        <a\r\n          className=\"leading-loose hover:text-blue-400 text-blue-600\"\r\n          href={website}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {name}\r\n        </a>\r\n      </div>\r\n      <div\r\n        className=\"flex relative overflow-hidden\"\r\n        onMouseEnter={() => setHover(true)}\r\n        onMouseLeave={() => setHover(false)}\r\n      >\r\n        {images.map((image) => (\r\n          <img\r\n            className=\"transform transition duration-1000 ease-in-out\"\r\n            ref={imgRef}\r\n            style={{\r\n              transform: `translate(${-(width ? width : 0) * currentIndex}px)`,\r\n            }}\r\n            src={image}\r\n            alt=\"\"\r\n          />\r\n        ))}\r\n        {images.length > 1 && (\r\n          <>\r\n            <div\r\n              className={`transition-all duration-200 ease-in-out absolute h-full bg-gray-400 cursor-pointer ${\r\n                hover ? \"opacity-25\" : \"opacity-0\"\r\n              } w-10`}\r\n              onClick={() =>\r\n                setCurrentIndex(mod(currentIndex - 1, images.length))\r\n              }\r\n            ></div>\r\n            <div\r\n              className={`transition-all duration-200 ease-in-out absolute h-full bg-gray-400 cursor-pointer ${\r\n                hover ? \"opacity-25\" : \"opacity-0\"\r\n              } w-10 right-0`}\r\n              onClick={() =>\r\n                setCurrentIndex(mod(currentIndex + 1, images.length))\r\n              }\r\n            ></div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"text-left px-4 py-2 grid grid-cols-3 border-b\">\r\n        {technologies.map((t) => (\r\n          <div>{t}</div>\r\n        ))}\r\n      </div>\r\n      <div className=\"text-left px-4 py-2\">{description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n\r\nfunction mod(n: number, m: number) {\r\n  return ((n % m) + m) % m;\r\n}\r\n","import React from \"react\";\r\n\r\nimport Project from \"./Project\";\r\n\r\nconst goflyfirst = \"https://edwinzhou.s3.us-east-2.amazonaws.com/goflyfirst.jpg\";\r\nconst chipo = \"https://edwinzhou.s3.us-east-2.amazonaws.com/chipo.jpg\";\r\n\r\nconst aftercaremanager = \"https://edwinzhou.s3.us-east-2.amazonaws.com/aftercaremanager.jpg\";\r\nconst aftercaremanager2 = \"https://edwinzhou.s3.us-east-2.amazonaws.com/aftercaremanager2.jpg\";\r\nconst aftercaremanager3 = \"https://edwinzhou.s3.us-east-2.amazonaws.com/aftercaremanager3.jpg\";\r\nconst aftercaremanager4 = \"https://edwinzhou.s3.us-east-2.amazonaws.com/aftercaremanager4.jpg\";\r\n\r\nconst projects = [\r\n  {\r\n    name: \"GoFlyFirst\",\r\n    website: \"https://www.goflyfirst.com\",\r\n    images: [goflyfirst],\r\n    technologies: [\"React\", \"Express\", \"TailwindCSS\"],\r\n    description: \"\"\r\n  },\r\n  {\r\n    name: \"Aftercare Manager\",\r\n    website: \"https://aftercaremanage.herokuapp.com/\",\r\n    images: [aftercaremanager, aftercaremanager2, aftercaremanager3, aftercaremanager4],\r\n    technologies: [\"React\", \"Redux\", \"Express\", \"TailwindCSS\", \"MongoDB\", \"D3\"],\r\n    description: \"\"\r\n  },\r\n  {\r\n    name: \"Chinese Poker\",\r\n    website: \"https://chipo.edwinzhou.com/\",\r\n    images: [chipo],\r\n    technologies: [\r\n      \"TypeScript\",\r\n      \"React\",\r\n      \"Express\",\r\n      \"TailwindCSS\",\r\n      \"WebSocket\",\r\n    ],\r\n    description: \"\"\r\n  },\r\n];\r\n\r\nconst Projects: React.FC = () => {\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-3\">\r\n      {projects.map((p) => (\r\n        <Project\r\n          name={p.name}\r\n          website={p.website}\r\n          images={p.images}\r\n          technologies={p.technologies}\r\n          description={p.description}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <div className=\"grid h-64 grid-rows-7 gap-2 text-center\">\r\n      <div className=\"row-start-4 text-3xl\">\r\n        Edwin is a New York City <span className=\"font-bold\">TypeScript</span>{\" \"}\r\n        developer\r\n      </div>\r\n      <div className=\"grid grid-cols-5 grid-start-2 row-start-7\">\r\n        <div className=\"col-start-2 col-span-3 grid-cols-3 grid\">\r\n          <div>\r\n            <a\r\n              className=\"hover:text-blue-400 text-blue-600\"\r\n              href=\"https://github.com/edzh\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Github\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a\r\n              className=\"hover:text-blue-400 text-blue-600\"\r\n              href=\"https://www.linkedin.com/in/edwin-zhou-468261116/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              LinkedIn\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a\r\n              className=\"hover:text-blue-400 text-blue-600\"\r\n              href=\"https://twitter.com/edwzh\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Twitter\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  return (\r\n    <div className=\"bg-white border-b\">\r\n      <div className=\"grid grid-cols-3 container mx-auto p-2 px-4\">\r\n        <div>\r\n          <Link to=\"/\" className=\"text-xl font-bold\">\r\n            edwin\r\n          </Link>\r\n        </div>\r\n        <div className=\"grid gap-2 grid-cols-3 col-span-2 my-auto text-center\">\r\n          <div className=\"col-start-2\">\r\n            <NavLink activeClassName=\"font-bold\" to=\"/projects\">\r\n              Projects\r\n            </NavLink>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Projects from './Projects';\nimport Home from './Home';\nimport Navbar from './Navbar';\n\nfunction App() {\n  return (\n    <div >\n      <Router>\n          <Navbar />\n          <div className=\"container p-4 mx-auto\">\n        <Switch>\n            <Route exact path=\"/\" render={() => <Home />}/>\n            <Route exact path=\"/projects\" render={() => <Projects />}/>\n        </Switch>\n          </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tailwindcss/dist/tailwind.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}