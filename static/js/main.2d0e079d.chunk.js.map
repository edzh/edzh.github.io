{"version":3,"sources":["img/goflyfirst.jpg","img/chipo.jpg","img/aftercaremanager4.jpg","Projects.tsx","Home.tsx","Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Projects","className","href","target","rel","src","goflyfirst","alt","aftercaremanager","chipo","Home","Navbar","to","activeClassName","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,+C,oNCgG5BC,EA1FE,WACf,OACE,yBAAKC,UAAU,0BACb,yBAAKA,UAAU,mDACb,yBAAKA,UAAU,YACb,uBACEA,UAAU,wCACVC,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAJN,iBASF,yBAAKH,UAAU,YACb,yBAAKI,IAAKC,IAAYC,IAAI,MAE5B,yBAAKN,UAAU,8CACb,sCAGA,wCAGA,8CAKJ,yBAAKA,UAAU,mDACb,yBAAKA,UAAU,YACb,uBACEA,UAAU,wCACVC,KAAK,yCACLC,OAAO,SACPC,IAAI,uBAJN,sBASF,6BACE,yBAAKC,IAAKG,IAAkBD,IAAI,MAElC,yBAAKN,UAAU,wCACb,sCAGA,sCACA,wCAGA,4CAGA,wCACA,qCAGJ,yBAAKA,UAAU,mDACb,yBAAKA,UAAU,YACb,uBACEA,UAAU,wCACVC,KAAK,+BACLC,OAAO,SACPC,IAAI,uBAJN,0BASF,6BACE,yBAAKC,IAAKI,IAAOF,IAAI,MAEvB,yBAAKN,UAAU,wCACb,2CACA,sCAGA,wCAGA,4CAGA,8CCjDKS,EAtCQ,WACrB,OACE,yBAAKT,UAAU,2CACb,yBAAKA,UAAU,wBAAf,4BAC2B,0BAAMA,UAAU,aAAhB,cAD3B,cAGA,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,2CACb,uBACEA,UAAU,0BACVC,KAAK,0BACLC,OAAO,SACPC,IAAI,uBAJN,UAQA,uBACEH,UAAU,0BACVC,KAAK,oDACLC,OAAO,SACPC,IAAI,uBAJN,YAQA,uBACEH,UAAU,0BACVC,KAAK,4BACLC,OAAO,SACPC,IAAI,uBAJN,eCDKO,EAtBU,WACvB,OACE,yBAAKV,UAAU,YACb,yBAAKA,UAAU,+CACb,6BACE,kBAAC,IAAD,CAAMW,GAAG,IAAIX,UAAU,qBAAvB,UAIF,yBAAKA,UAAU,yDACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAASY,gBAAgB,gBAAgBD,GAAG,aAA5C,iBCQGE,MAhBf,WACE,OACE,6BACE,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,yBAAKb,UAAU,yBACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,cCFpCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2d0e079d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/goflyfirst.401b5b0c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chipo.d6497fa9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aftercaremanager4.94403103.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport goflyfirst from \"./img/goflyfirst.jpg\";\r\nimport chipo from \"./img/chipo.jpg\";\r\nimport aftercaremanager from \"./img/aftercaremanager4.jpg\";\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-2\">\r\n      <div className=\"grid-rows-3 text-center border rounded bg-white\">\r\n        <div className=\"border-b\">\r\n          <a\r\n            className=\"underline leading-loose text-blue-600\"\r\n            href=\"https://www.goflyfirst.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Go Fly First\r\n          </a>\r\n        </div>\r\n        <div className=\"border-b\">\r\n          <img src={goflyfirst} alt=\"\" />\r\n        </div>\r\n        <div className=\"text-left px-4 py-2 grid grid-cols-3 gap-2\">\r\n          <div>\r\n            React\r\n          </div>\r\n          <div>\r\n            Express\r\n          </div>\r\n          <div>\r\n            TailwindCSS\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"grid-rows-3 text-center border rounded bg-white\">\r\n        <div className=\"border-b\">\r\n          <a\r\n            className=\"underline leading-loose text-blue-600\"\r\n            href=\"https://aftercaremanage.herokuapp.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Aftercare Manager\r\n          </a>\r\n        </div>\r\n        <div>\r\n          <img src={aftercaremanager} alt=\"\" />\r\n        </div>\r\n        <div className=\"text-left px-4 py-2 grid grid-cols-3\">\r\n          <div>\r\n            React\r\n          </div>\r\n          <div>Redux</div>\r\n          <div>\r\n            Express\r\n          </div>\r\n          <div>\r\n            TailwindCSS\r\n          </div>\r\n          <div>MongoDB</div>\r\n          <div>D3</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"grid-rows-3 text-center border rounded bg-white\">\r\n        <div className=\"border-b\">\r\n          <a\r\n            className=\"underline leading-loose text-blue-600\"\r\n            href=\"https://chipo.edwinzhou.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Chinese Poker/Big Two\r\n          </a>\r\n        </div>\r\n        <div>\r\n          <img src={chipo} alt=\"\" />\r\n        </div>\r\n        <div className=\"text-left px-4 py-2 grid grid-cols-3\">\r\n          <div>TypeScript</div>\r\n          <div>\r\n            React\r\n          </div>\r\n          <div>\r\n            Express\r\n          </div>\r\n          <div>\r\n            TailwindCSS\r\n          </div>\r\n          <div>WebSocket</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <div className=\"grid h-64 grid-rows-7 gap-2 text-center\">\r\n      <div className=\"row-start-4 text-3xl\">\r\n        Edwin is a New York City <span className=\"font-bold\">TypeScript</span> developer\r\n      </div>\r\n      <div className=\"grid grid-cols-5 grid-start-2 row-start-7\">\r\n        <div className=\"col-start-2 col-span-3 grid-cols-3 grid\">\r\n          <a\r\n            className=\"underline text-blue-600\"\r\n            href=\"https://github.com/edzh\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Github\r\n          </a>\r\n          <a\r\n            className=\"underline text-blue-600\"\r\n            href=\"https://www.linkedin.com/in/edwin-zhou-468261116/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            LinkedIn\r\n          </a>\r\n          <a\r\n            className=\"underline text-blue-600\"\r\n            href=\"https://twitter.com/edwzh\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Twitter\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"grid grid-cols-3 container mx-auto p-2 px-4\">\r\n        <div>\r\n          <Link to=\"/\" className=\"text-xl font-bold\">\r\n            edwin\r\n          </Link>\r\n        </div>\r\n        <div className=\"grid gap-2 grid-cols-3 col-span-2 my-auto text-center\">\r\n          <div className=\"col-start-2\">\r\n            <NavLink activeClassName=\"text-blue-400\" to=\"/projects\">\r\n              Projects\r\n            </NavLink>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Projects from './Projects';\nimport Home from './Home';\nimport Navbar from './Navbar';\n\nfunction App() {\n  return (\n    <div >\n      <Router>\n          <Navbar />\n          <div className=\"container p-4 mx-auto\">\n        <Switch>\n            <Route exact path=\"/\" render={() => <Home />}/>\n            <Route exact path=\"/projects\" render={() => <Projects />}/>\n        </Switch>\n          </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tailwindcss/dist/tailwind.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}